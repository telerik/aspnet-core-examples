@(Html.Kendo().Scheduler<SqlServerDataBase.Models.TaskViewModel>()
	.Name("scheduler")
    .StartTime(6, 30, 0)
	.Height(600)
    .WorkWeekStart(1)
    .WorkWeekEnd(7)
	.Views(views =>
	{
		views.DayView();
		views.WorkWeekView(workWeekView => workWeekView.Selected(true));
		views.WeekView();
		views.MonthView();
		views.AgendaView();
		views.TimelineView();
	})
	.Timezone("Etc/UTC")
	.DataSource(d => d
		.Model(m =>
		{
			m.Id(f => f.TaskID);
			m.Field(f => f.Title).DefaultValue("No title");
			m.Field(f => f.Title).DefaultValue("No title");
			m.RecurrenceId(f => f.RecurrenceID);
		})
        .ServerOperation(true)
        .Read(read => read.Action("Read", "Scheduler").Data("getAdditionalData"))
		.Create("Create", "Scheduler")
		.Destroy("Destroy", "Scheduler")
		.Update("Update", "Scheduler")
	)
)

    <script>
        function getAdditionalData() {
            var scheduler = $("#scheduler").data("kendoScheduler");

            var timezone = scheduler.options.timezone;
            var startDate = kendo.timezone.convert(scheduler.view().startDate(), timezone, "Etc/UTC");
            var endDate = kendo.timezone.convert(scheduler.view().endDate(), timezone, "Etc/UTC");

            var startTime = 0;
            var endTime = 0;

            if (scheduler.view().startTime) {
                console.log('in')
                //optionally add startTime / endTime of the view
                startTime = kendo.date.getMilliseconds(scheduler.view().startTime());
                endTime = kendo.date.getMilliseconds(scheduler.view().endTime());
                endTime = endTime == 0 ? kendo.date.MS_PER_DAY : endTime;
            }

            var result = {
                Start: new Date(startDate.getTime() - (startDate.getTimezoneOffset() * kendo.date.MS_PER_MINUTE) + startTime),
                End: new Date(endDate.getTime() - (endDate.getTimezoneOffset() * kendo.date.MS_PER_MINUTE) + endTime)
            }

            return result;
        }
    </script>