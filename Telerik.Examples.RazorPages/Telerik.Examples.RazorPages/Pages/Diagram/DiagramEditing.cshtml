@page
@using Telerik.Examples.RazorPages.Models
@model Telerik.Examples.RazorPages.Pages.Diagram.DiagramEditingModel

@inject Microsoft.AspNetCore.Antiforgery.IAntiforgery Xsrf
@Html.AntiForgeryToken()

@(Html.Kendo().Diagram<OrgDiagramShape, OrgDiagramConnection>()
          .Name("diagram")
          .DataSource(d => d
              .ShapeDataSource()
              .Model(m =>
              {
                  m.Id(s => s.Id);
                  m.Field(s => s.Id).Editable(false);
                  m.Field(s => s.JobTitle);
                  m.Field(s => s.Color);
              })
              .Read(r => r.Url("/Diagram/DiagramEditing?handler=ReadShapes").Data("forgeryToken"))
              .Create(r => r.Url("/Diagram/DiagramEditing?handler=CreateShape").Data("forgeryToken"))
              .Destroy(r => r.Url("/Diagram/DiagramEditing?handler=DestroyShape").Data("forgeryToken"))
              .Update(r => r.Url("/Diagram/DiagramEditing?handler=UpdateShape").Data("forgeryToken"))
          )
          .ConnectionsDataSource(d => d
              .Model(m =>
              {
                  m.Id(c => c.Id);
                  m.Field(c => c.Id).Editable(false);
                  m.From(c => c.FromShapeId);
                  m.To(c => c.ToShapeId);
              })
              .Read(r => r.Url("/Diagram/DiagramEditing?handler=ReadConnections").Data("forgeryToken"))
              .Create(r => r.Url("/Diagram/DiagramEditing?handler=CreateConnection").Data("forgeryToken"))
              .Destroy(r => r.Url("/Diagram/DiagramEditing?handler=DestroyConnection").Data("forgeryToken"))
              .Update(r => r.Url("/Diagram/DiagramEditing?handler=UpdateConnection").Data("forgeryToken"))
          )
          .Events(e => e.DataBound("onDataBound"))
          .Layout(l => l
              .Type(DiagramLayoutType.Tree)
              .Subtype(DiagramLayoutSubtype.Tipover)
              .UnderneathHorizontalOffset(140)
          )
          .ShapeDefaults(sd => sd
              .Visual("visualTemplate")
              .Content(c => c
                  .Template("#= dataItem.JobTitle #")
                  .FontSize(17)
              )
          )
          .ConnectionDefaults(cd => cd
              .Stroke(s => s
                  .Color("#586477")
                  .Width(2)
              )
          )
          .HtmlAttributes(new { style = "height: 600px;" })
)

<script>
    function forgeryToken() {
        return kendo.antiForgeryTokens();
    }

    function visualTemplate(options) {
        var dataviz = kendo.dataviz;
        var g = new dataviz.diagram.Group();
        var dataItem = options.dataItem;

        if (dataItem.JobTitle === "President") {
            g.append(new dataviz.diagram.Circle({
                radius: 60,
                stroke: {
                    width: 2,
                    color: dataItem.Color || "#586477"
                },
                fill: "#e8eff7"
            }));
        } else {
            g.append(new dataviz.diagram.Rectangle({
                width: 240,
                height: 67,
                stroke: {
                    width: 0
                },
                fill: "#e8eff7"
            }));

            g.append(new dataviz.diagram.Rectangle({
                width: 8,
                height: 67,
                fill: dataItem.Color,
                stroke: {
                    width: 0
                }
            }));
        }

        return g;
    }

    function onDataBound(e) {
        var that = this;
        setTimeout(function () {
            that.bringIntoView(that.shapes);
        }, 0);
    }
</script>